blueprint:
  name: Inovelli Red Series LZW31-SN Dimmer (ZWave-JS)
  description: Create automations for the Inovelli Red Series LZW31-SN Dimmer using
    the ZWave-JS integration.
  domain: automation
  input:
    inovelli_switch:
      name: Inovelli Dimmer
      description: List of available inovelli LZW31-SN dimmers.
      selector:
        device:
          integration: zwave_js
          manufacturer: Inovelli
          model: LZW31-SN
    config_button:
      name: Button C - Config press 1x
      description: Action to run, when the config button is pressed one time.
      default: []
      selector:
        action: {}
    button_a:
      name: Button A - Up/On press 1x
      description: Action to run, when the button is pressed one time.
      default: []
      selector:
        action: {}
    button_b:
      name: Button B - Down/Off press 1x
      description: Action to run, when the button is pressed one time.
      default: []
      selector:
        action: {}
    button_a_held:
      name: Button A - Up/On held down
      description: Action to run, when the button is held down.
      default: []
      selector:
        action: {}
    button_b_held:
      name: Button B - Down/Off held down
      description: Action to run, when the button is held down.
      default: []
      selector:
        action: {}
    button_a2:
      name: Button A - Up/On press 2x
      description: Action to run, when the button is pressed two times.
      default: []
      selector:
        action: {}
    button_b2:
      name: Button B - Down/Off press 2x
      description: Action to run, when the button is pressed two times.
      default: []
      selector:
        action: {}
    button_a3:
      name: Button A - Up/On press 3x
      description: Action to run, when the button is pressed three times.
      default: []
      selector:
        action: {}
    button_b3:
      name: Button B - Down/Off press 3x
      description: Action to run, when the button is pressed three times.
      default: []
      selector:
        action: {}
    button_a4:
      name: Button A - Up/On press 4x
      description: Action to run, when the button is pressed four times.
      default: []
      selector:
        action: {}
    button_b4:
      name: Button B - Down/Off press 4x
      description: Action to run, when the button is pressed four times.
      default: []
      selector:
        action: {}
    button_a5:
      name: Button A - Up/On press 5x
      description: Action to run, when the button is pressed five times.
      default: []
      selector:
        action: {}
    button_b5:
      name: Button B - Down/Off press 5x
      description: Action to run, when the button is pressed five times.
      default: []
      selector:
        action: {}
  source_url: https://github.com/stu1811/homeassistant/blob/main/blueprints/automations/bhanifin/zwave_js_inovelli_lzw31_sn_red_series_dimmer.yaml
mode: single
max_exceeded: silent
trigger:
- platform: event
  event_type: zwave_js_event
variables:
  device_id: !input 'inovelli_switch'
  presses: "{% set value = trigger.event.data.value %}\n{% if value == \"KeyPressed\"\
    \ %}\n  1\n{% else %}\n  {{ value|replace(\"KeyPressed\",\"\")|replace(\"x\",\"\
    \") }}\n{% endif %}\n"
  button: "{% if trigger.event.data.property_key_name|int == 1 %}\n  down\n{% elif\
    \ trigger.event.data.property_key_name|int == 2 %}\n  up\n{% elif trigger.event.data.property_key_name|int\
    \ == 3 %}\n  config\n{% endif %}\n"
condition: '{{ trigger.event.data.device_id == device_id }}'
action:
- choose:
  - conditions: '{{ button == "config" }}'
    sequence: !input 'config_button'
  - conditions: '{{ button == "up" and presses|int == 1 }}'
    sequence: !input 'button_a'
  - conditions: '{{ button == "down" and presses|int == 1 }}'
    sequence: !input 'button_b'
  - conditions: '{{ button == "up" and presses == "KeyHeldDown" }}'
    sequence: !input 'button_a_held'
  - conditions: '{{ button == "down" and presses == "KeyHeldDown" }}'
    sequence: !input 'button_b_held'
  - conditions: '{{ button == "up" and presses|int == 2 }}'
    sequence: !input 'button_a2'
  - conditions: '{{ button == "down" and presses|int == 2 }}'
    sequence: !input 'button_b2'
  - conditions: '{{ button == "up" and presses|int == 3 }}'
    sequence: !input 'button_a3'
  - conditions: '{{ button == "down" and presses|int == 3 }}'
    sequence: !input 'button_b3'
  - conditions: '{{ button == "up" and presses|int == 4 }}'
    sequence: !input 'button_a4'
  - conditions: '{{ button == "down" and presses|int == 4 }}'
    sequence: !input 'button_b4'
  - conditions: '{{ button == "up" and presses|int == 5 }}'
    sequence: !input 'button_a5'
  - conditions: '{{ button == "down" and presses|int == 5 }}'
    sequence: !input 'button_b5'
